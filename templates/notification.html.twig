{% extends "master.html.twig" %}

{% set title = 'Notifications' %}

{% block content %}
    <div class="row">
        <div class="col-xs-8">
            <div class="box">
                <div class="box-header">
                    <h3 class="box-title">Send Notification</h3>
                </div>
                <div class="box-body">
                    <form id="frmNotify" method="POST" action="/notifications">
                        <div class="form-group">
                            <label for="txtTitle">Title</label>
                            <input type="text" id="txtTitle" name="txtTitle" placeholder="Notification Title" class="form-control" maxlength="100" required>
                        </div>
                        <div class="form-group">
                            <label for="txtBody">Body</label>
                            <textarea name="txtBody" id="txtBody" cols="30" rows="10" class="form-control" placeholder="Notification Body" maxlength="1894" required></textarea>
                        </div>
                        <div class="form-group">
                            <label>
                                <input type="checkbox" name="cbPermanent" id="cbPermanent"> Permanent
                            </label>
                            or
                            <label for="txtExpiry">Expiry (local time):</label>
                            <input type="datetime-local" name="txtExpiry" id="txtExpiry" placeholder="mm/dd/yy hh:mm">
                        </div>
                        <div class="checkbox">
                            <label>
                                <input type="checkbox" name="cbDiscord" id="cbDiscord"> Also send to Discord
                            </label>
                        </div>
                        <button type="submit" id="btnSubmit">Send</button>
                    </form>
                </div>
            </div>
        </div>
        <div class="col-xs-4">
            <div class="box">
                <div class="box-header"><h3 class="box-title">Previous Notifications</h3></div>
                <div class="box-body">
                    {% for notification in notifications %}
                        <div class="panel panel-default" data-notification-id="{{ notification.id }}">
                            <div class="panel-heading">Notification: {{ notification.title }}{% if notification.expired == 1 %} <span class="text-danger">(expired)</span>{% endif %}</div>
                            <div class="panel-body">
                                <div class="row">
                                    <div class="col-lg-12">
                                        <dl>
                                            <dt>Sender</dt>
                                            <dd style="margin-left: 1rem;">{{ notification.who_name }}</dd>
                                            <dt>Time</dt>
                                            <dd style="margin-left: 1rem;">{{ notification.time }}</dd>
                                            {% if notification.expiry and notification._expires == 1 %}
                                            <dt>Expiry</dt>
                                            <dd style="margin-left: 1rem;">{{ notification.expiry }}</dd>
                                            {% endif %}
                                            <dt>Content</dt>
                                            <dd style="margin-left:1rem;">{{ notification.content }}</dd>
                                        </dl>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-12" style="text-align: center;">
                                        <div class="btn-group btn-group-xs" role="group">
                                            <button class="btn btn-default" data-action="discord"     onclick="handleNotificationAction(this)">Send to Discord</button>
                                            {% if notification._expired == 1 and notification._expires == 1 %}
                                                <button class="btn btn-default" data-action="expired" onclick="handleNotificationAction(this, false)">Mark Not Expired</button>
                                            {% else %}
                                                <button class="btn btn-default" data-action="expired" onclick="handleNotificationAction(this, true)">Mark Expired</button>
                                            {% endif %}
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    {% endfor %}
                </div>
            </div>
        </div>
    </div>
    {% include "home/reportmodal.html.twig" %}
{% endblock content %}

{% block js %}
    {{ parent() }}
    <script type="text/javascript">
        (() => {
            const btnSubmit = document.getElementById('btnSubmit');
            const cbPermanent = document.getElementById('cbPermanent');
            const expiryInput = document.getElementById('txtExpiry');

            const dateTimeFormat = Intl.DateTimeFormat();
            const isDate = (d) => !(d === 'Invalid Date' || isNaN(d));

            if (navigator.userAgent.match(/Firefox/)) {
                expiryInput.value = new Date().toLocaleString('en-US', { hour12: false });
            } else {
                const now = new Date().toJSON();
                expiryInput.value = now.substring(0, now.length - 2);
            }

            cbPermanent.addEventListener('change', e => {
                expiryInput.disabled = cbPermanent.checked;
            });

            document.getElementById('frmNotify').addEventListener('submit', e => {
                e.preventDefault();
                const restoreText = btnSubmit.textContent;
                const restore = () => {
                    btnSubmit.disabled = false;
                    btnSubmit.textContent = restoreText;
                }

                btnSubmit.disabled = true;
                btnSubmit.textContent = 'Working...';
                $.ajaxSetup({
                    crossDomain: true,
                    xhrFields: {
                        withCredentials: true
                    }
                });

                const toPost = {
                    txtTitle: document.getElementById('txtTitle').value,
                    txtBody: document.getElementById('txtBody').value,
                    discord: document.getElementById('cbDiscord').checked === true
                };
                if (!toPost.txtTitle) {
                    alert('Missing notification title.');
                    return restore();
                }
                if (!toPost.txtBody) {
                    alert('Missing notification body.');
                    return restore();
                }
                if (!cbPermanent.checked) {
                    const d = new Date(expiryInput.value);
                    if (!isDate(d)) {
                        alert('Invalid date given.');
                        return restore();
                    }
                    toPost.expiry = d.getTime();

                    const expiryInThePastWarning = 'Expiry date preceeds the current local date, are you sure you want to send an already expired notification?';
                    if (toPost.expiry < Date.now() && !confirm(expiryInThePastWarning)) {
                        return restore();
                    }
                }
                
                $.post('{{ webroots.game }}/createNotification', toPost)
                    .done(() => {
                        if (confirm('Notification created. Reload page?')) {
                            document.location.href = document.location.href;
                        }
                    }).fail((x, s, e) => {
                        console.error('Failed to send notification:', x, s, e);
                        alert('Failed to send notification, if the problem persists contact a dev.');
                    }).always(restore);
            })
        })();
        function handleNotificationAction(elem, arg) {
            const todo = {
                url: '',
                payload: {
                    id: elem.closest('.panel').dataset.notificationId
                }
            };
            switch(elem.dataset.action) {
                case 'discord':
                    todo.url = '{{ webroots.game }}/sendNotificationToDiscord';
                    break;
                case 'expired':
                    todo.url = '{{ webroots.game }}/setNotificationExpired';
                    todo.payload.expired = !!arg;
                    break;
                default:
                    return;
            }

            $.ajaxSetup({
                crossDomain: true,
                xhrFields: {
                    withCredentials: true
                }
            });
            $.post(todo.url, todo.payload)
                .done(() => {
                    if (confirm("Action completed successfully. Reload page?")) {
                        document.location.href = document.location.href;
                    }
                }).fail(() => {
                    alert('Failed to perform the action, if the problem persists contact a dev.');
                });
        }
    </script>
{% endblock %}
