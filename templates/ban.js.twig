function askDiscord(uid) {
    var api = "/api/report/discordinfo/";
    $.ajax(api.concat(uid))
    .done(function() {
        $("#alertarea").append('<div class="alert alert-success alert-dismissible"><button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button><h4><i class="icon fa fa-check"></i> Discord User Information</h4>The user information of ' + uid + ' have been sent to the #modlog channel.</div>');
    }).fail(function() {
        $("#alertarea").append('<div class="alert alert-danger alert-dismissible"><button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button><h4><i class="icon fa fa-check"></i> Error sending Discord Message</h4>Something strange happened. You might try it yourself. Send "!whois '+ uid + '" in the #staff-offtopic channel.</div>');
    });
}

function banUser(self, path, s1, s2) {
    $.ajaxSetup({
        crossDomain: true,
        xhrFields: {
            withCredentials: true
        }
    });

    var reason = prompt(s1);
    if (!reason) {
        if (reason !== null) {
            alert("You need to enter a ban reason");
        }
        return;
    }
    var rollback = prompt("Rollback pixels of last hours:", 24);
    var num = Number(rollback);
    if (!rollback || isNaN(num)) {
        alert("You need to enter a number");
        return;
    }

    var data = {
        'username': self.data("username"),
        'reason': reason,
        'rollback_time': num*3600
    };
    $.post(path, data, function() {
        $("#alertarea").append('<div class="alert alert-success alert-dismissible"><button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button><h4><i class="icon fa fa-check"></i>' + data.username + ' has been banned with reason: ' + data.reason + '. <a href="#" onclick="window.refresh()">Reload Page</a></h4></div>');
    }).fail(function() {
        $("#alertarea").append('<div class="alert alert-danger alert-dismissible"><button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button><h4><i class="icon fa fa-times"></i>Uh Oh! That\'s an error!</h4>Banning ' + data.username + ' with reason  "' + data.reason + '" failed. Something strange happened.</div>');
    });
}

function unbanUser(self, path) {
    $.ajaxSetup({
        crossDomain: true,
        xhrFields: {
            withCredentials: true
        }
    });

    let reason = prompt('Unban Reason');
    if (reason == null) return; //cancelled, don't bug with an alert
    if (!reason.trim()) return alert('Unban reason is required'); //didn't cancel, input is blank/whitespace

    var data = { 'username': self.data("username"), 'reason': reason };
    $.post(path, data, function() {
        $("#alertarea").append('<div class="alert alert-success alert-dismissible"><button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button><h4><i class="icon fa fa-check"></i>' + self.data("username") + ' has been unbanned. <a href="#" onclick="window.refresh()">Reload Page</a></h4></div>');
    }).fail(function() {
        $("#alertarea").append('<div class="alert alert-danger alert-dismissible"><button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button><h4><i class="icon fa fa-times"></i>Uh Oh! That\'s an error!</h4>Unbanning ' + self.data("username") + ' failed. Something strange happened.</div>');
    });
}
$("a.permaban").click(function(e) {
    banUser($(this), "{{ webroots.game }}/admin/permaban", "Reason:", "permaban");
});
$("a.shadowban").click(function(e) {
    banUser($(this), "{{ webroots.game }}/admin/shadowban", "Reason:", "shadowban");
});
$("a.unban").click(function(e) {
    unbanUser($(this), "{{ webroots.game }}/admin/unban");
});

function tempbanPreflight() {
    let toRet = {banLength: false, removalAmount: false, banReason: false};

    let banLength = prompt('Ban length (in hours):');
    if (banLength == null || isNaN(banLength)) {
        alert('Ban length is required. Tempban aborted.');
        return false;
    }

    let removalAmount = prompt('Pixel reversal (in hours):');
    if (removalAmount == null || isNaN(removalAmount)) {
        alert('Pixel reversal is required. Tempban aborted.');
        return false;
    }

    let banReason = prompt('Ban reason:');
    if (!banReason) {
        alert('Ban reason is required. Tempban aborted.');
        return false;
    }

    toRet.banLength = banLength;
    toRet.removalAmount = removalAmount;
    toRet.banReason = banReason;

    return toRet;
}



{#$(".temporary-ban").click(function(e) {#}
{#    // $.ajaxSetup({#}
{#    //     crossDomain: true,#}
{#    //     xhrFields: {#}
{#    //         withCredentials: true#}
{#    //     }#}
{#    // });#}

{#    // let preflight = tempbanPreflight();#}

{#    handleSearchAction("tempban", this.dataset.username, this);#}

{#    // $.post("{{ webroots.game }}/admin/ban", {#}
{#    //     username: this.dataset.username,#}
{#    //     reason: preflight.banReason,#}
{#    //     rollback_time: parseFloat(preflight.removalAmount) * 3600,#}
{#    //     time: parseFloat(preflight.banLength) * 3600#}
{#    // }, function() {#}
{#    //     alert('User tempbanned');#}
{#    // }).fail(function() {#}
{#    //     alert('Failed to tempban, if the problem persists contact a dev.');#}
{#    // });#}
{#});#}

function handleSearchAction(action, who, elem) {
    switch(action) {
        case 'permaban':
            banUser($(elem), "{{ webroots.game }}/admin/permaban", "Reason:", "permaban");
            break;
        case 'shadowban':
            banUser($(elem), "{{ webroots.game }}/admin/shadowban", "Reason:", "shadowban");
            break;
        case 'unban':
            unbanUser($(elem), "{{ webroots.game }}/admin/unban");
            break;
        case 'tempban': {
            $.ajaxSetup({
                crossDomain: true,
                xhrFields: {
                    withCredentials: true
                }
            });

            let preflight = tempbanPreflight();
            if (preflight === false) return;

            $.post("{{ webroots.game }}/admin/ban", {
                username: who,
                reason: preflight.banReason,
                rollback_time: parseFloat(preflight.removalAmount) * 3600,
                time: parseFloat(preflight.banLength) * 3600
            }, function() {
                alert('User tempbanned');
            }).fail(function() {
                alert('Failed to tempban, if the problem persists contact a dev.');
            });
            break;
        }
    }
}